---

- name: Create user group
  become: yes
  group:
    name: "{{ kafka_user }}"
    state: present

- name: Create user
  become: yes
  user:
    name: "{{ kafka_user }}"
    state: present
    group: "{{ kafka_user }}"
    createhome: yes

- name: Ensure install folders
  become: yes
  become_user: "{{ kafka_user }}"
  file:
    state: directory
    path: "{{ item }}"
  with_items:
    - "/home/{{ kafka_user }}/bin"
    - "/home/{{ kafka_user }}/tmp"
    - "/home/{{ kafka_user }}/log"
    - "/home/{{ kafka_user }}/data"

- name: Remove lost+found in the datadir
  become: yes
  file:
    path: "/home/{{ kafka_user }}/data/lost+found"
    state: absent

- name: Fetch kafka binary package
  become: yes
  become_user: "{{ kafka_user }}"
  get_url:
    dest: "/home/{{ kafka_user }}/tmp/kafka_{{ kafka_version_scala }}-{{ kafka_version_kafka }}.tgz"
    url: "{{ kafka_apache_mirror }}/kafka/{{ kafka_version_kafka }}/kafka_{{ kafka_version_scala }}-{{ kafka_version_kafka }}.tgz"

- name: Uncompress the kafka tar
  become: yes
  become_user: "{{ kafka_user }}"
  unarchive:
    copy: no
    creates: "/home/{{ kafka_user }}/kafka_{{ kafka_version_scala }}-{{ kafka_version_kafka }}"
    dest: "/home/{{ kafka_user }}"
    src: "/home/{{ kafka_user }}/tmp/kafka_{{ kafka_version_scala }}-{{ kafka_version_kafka }}.tgz"

- name: Link kafka to the right version
  become: yes
  become_user: "{{ kafka_user }}"
  file:
    path: "/home/{{ kafka_user }}/kafka"
    src: "/home/{{ kafka_user }}/kafka_{{ kafka_version_scala }}-{{ kafka_version_kafka }}"
    state: link

- name: link config dir
  become: yes
  become_user: "{{ kafka_user }}"
  file:
    force: yes
    path: "/home/{{ kafka_user }}/etc"
    src: "/home/{{ kafka_user }}/kafka/config"
    state: link

- name: Set start script
  template: >
    src=init.tpl
    dest=/etc/init.d/kafka
    owner=root
    group=root
    mode=0744

- name: Register service
  systemd:
    name: kafka
    enabled: yes
    daemon_reload: yes

- name: Flush handlers to apply config changes
  meta: flush_handlers

- name: Ensure Kafka is started
  service:
    name: kafka
    state: started
    daemon_reload: yes